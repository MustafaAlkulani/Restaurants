import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes
// ignore_for_file: unnecessary_brace_in_string_interps

//WARNING: This file is automatically generated. DO NOT EDIT, all your changes would be lost.

typedef LocaleChangeCallback = void Function(Locale locale);

class I18n implements WidgetsLocalizations {
  const I18n();
  static Locale _locale;
  static bool _shouldReload = false;

  static set locale(Locale newLocale) {
    _shouldReload = true;
    I18n._locale = newLocale;
  }

  static const GeneratedLocalizationsDelegate delegate = GeneratedLocalizationsDelegate();

  /// function to be invoked when changing the language
  static LocaleChangeCallback onLocaleChanged;

  static I18n of(BuildContext context) =>
    Localizations.of<I18n>(context, WidgetsLocalizations);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  /// "الاطباق"
  String get dishes => "الاطباق";
  /// "الاصناف"
  String get category => "الاصناف";
  /// "عرض المزيد"
  String get more => "عرض المزيد";
  /// "الاكثر شيوعا"
  String get popular => "الاكثر شيوعا";
  /// "المشروبات"
  String get drinks => "المشروبات";
  /// "منوع"
  String get miscellaneous => "منوع";
  /// " الحلويات"
  String get dessret => " الحلويات";
  /// " وجبات خفيفة"
  String get fastFood => " وجبات خفيفة";
  /// "الوجبات"
  String get meals => "الوجبات";
  /// "المفضلة"
  String get favorite => "المفضلة";
  /// "تسجيل خروج"
  String get logout => "تسجيل خروج";
  /// "معلومات الحساب"
  String get accountinfo => "معلومات الحساب";
  /// "الاسم بالكامل"
  String get fullname => "الاسم بالكامل";
  /// "الايميل"
  String get email => "الايميل";
  /// "رقم الجوال"
  String get phone => "رقم الجوال";
  /// "العنوان"
  String get address => "العنوان";
  /// "النوع"
  String get gender => "النوع";
  /// "تاريخ الميلاد"
  String get datofbirth => "تاريخ الميلاد";
  /// "تغيير الثيم"
  String get theme => "تغيير الثيم";
  /// "البحث"
  String get search => "البحث";
  /// "اخر ماتم البحث عنه"
  String get history => "اخر ماتم البحث عنه";
  /// "التاكيد"
  String get checkout => "التاكيد";
  /// "عنوان التسوق"
  String get shippingAddress => "عنوان التسوق";
  /// "طرق الدفع"
  String get paymentmethod => "طرق الدفع";
  /// "العناصر"
  String get items => "العناصر";
  /// "رمز التحقق"
  String get couponcode => "رمز التحقق";
  /// "الاجمالي"
  String get total => "الاجمالي";
  /// "اطلب"
  String get placeorder => "اطلب";
  /// "العدد"
  String get quantity => "العدد";
  /// "الوصف"
  String get description => "الوصف";
  /// "اضافة الى القائمة"
  String get addtocart => "اضافة الى القائمة";
  /// "الاشعارات"
  String get notifications => "الاشعارات";
  /// "التفاصيل"
  String get details => "التفاصيل";
  /// "التقييم"
  String get reviews => "التقييم";
  /// "تسجيل دخول"
  String get login => "تسجيل دخول";
  /// "تسجيل حساب"
  String get register => "تسجيل حساب";
  /// "تسجيل دخول"
  String get signin => "تسجيل دخول";
  /// "انشاء حساب"
  String get signup => "انشاء حساب";
  /// "اليس لديك حساب بالفعل"
  String get doyouhaveaccount => "اليس لديك حساب بالفعل";
  /// "نسيت كلمة المرور"
  String get forgetpassword => "نسيت كلمة المرور";
  /// "الطلبات"
  String get orders => "الطلبات";
  /// "معلوماتي الشخصية"
  String get profile => "معلوماتي الشخصية";
  /// "الرئيسية"
  String get home => "الرئيسية";
  /// "كلمة المرور"
  String get password => "كلمة المرور";
  /// "تاكيد كلمة المرور"
  String get cpassword => "تاكيد كلمة المرور";
  /// "الاسم"
  String get name => "الاسم";
  /// "مرحبــا بكم "
  String get welcome => "مرحبــا بكم ";
  /// "لا توجد نتيجة "
  String get result => "لا توجد نتيجة ";
  /// "تغيير اللغة"
  String get lang => "تغيير اللغة";
}

class _I18n_ar_YE extends I18n {
  const _I18n_ar_YE();

  @override
  TextDirection get textDirection => TextDirection.rtl;
}

class _I18n_en_US extends I18n {
  const _I18n_en_US();

  /// "Dishes"
  @override
  String get dishes => "Dishes";
  /// "Category"
  @override
  String get category => "Category";
  /// "more"
  @override
  String get more => "more";
  /// "Popular"
  @override
  String get popular => "Popular";
  /// "Drinks"
  @override
  String get drinks => "Drinks";
  /// "Miscellaneous"
  @override
  String get miscellaneous => "Miscellaneous";
  /// " dessret"
  @override
  String get dessret => " dessret";
  /// " Fast Food "
  @override
  String get fastFood => " Fast Food ";
  /// "Meals"
  @override
  String get meals => "Meals";
  /// "My Favorite Items"
  @override
  String get favorite => "My Favorite Items";
  /// "Logout"
  @override
  String get logout => "Logout";
  /// "Account Information"
  @override
  String get accountinfo => "Account Information";
  /// "Full Name"
  @override
  String get fullname => "Full Name";
  /// "Email"
  @override
  String get email => "Email";
  /// "Phone"
  @override
  String get phone => "Phone";
  /// "Address"
  @override
  String get address => "Address";
  /// "Gender"
  @override
  String get gender => "Gender";
  /// "DAte of Birth"
  @override
  String get datofbirth => "DAte of Birth";
  /// "Change Theme"
  @override
  String get theme => "Change Theme";
  /// "Search"
  @override
  String get search => "Search";
  /// "History"
  @override
  String get history => "History";
  /// "checkout"
  @override
  String get checkout => "checkout";
  /// "Shipping Address"
  @override
  String get shippingAddress => "Shipping Address";
  /// "Payment Method"
  @override
  String get paymentmethod => "Payment Method";
  /// "Items"
  @override
  String get items => "Items";
  /// "Coupon Code"
  @override
  String get couponcode => "Coupon Code";
  /// "Total"
  @override
  String get total => "Total";
  /// "Place Order"
  @override
  String get placeorder => "Place Order";
  /// "Quantity"
  @override
  String get quantity => "Quantity";
  /// "Description"
  @override
  String get description => "Description";
  /// "Add to Cart"
  @override
  String get addtocart => "Add to Cart";
  /// "Notifications"
  @override
  String get notifications => "Notifications";
  /// "details"
  @override
  String get details => "details";
  /// "reviews"
  @override
  String get reviews => "reviews";
  /// "Login"
  @override
  String get login => "Login";
  /// "Register"
  @override
  String get register => "Register";
  /// "Sign In"
  @override
  String get signin => "Sign In";
  /// "Sign Up"
  @override
  String get signup => "Sign Up";
  /// "Dont You Have Account "
  @override
  String get doyouhaveaccount => "Dont You Have Account ";
  /// "Forget Password"
  @override
  String get forgetpassword => "Forget Password";
  /// "orders"
  @override
  String get orders => "orders";
  /// "Profile"
  @override
  String get profile => "Profile";
  /// "Home"
  @override
  String get home => "Home";
  /// " password"
  @override
  String get password => " password";
  /// "  confirm password"
  @override
  String get cpassword => "  confirm password";
  /// "name"
  @override
  String get name => "name";
  /// " Welcome to Res "
  @override
  String get welcome => " Welcome to Res ";
  /// "No Data found "
  @override
  String get result => "No Data found ";
  /// "Change Language"
  @override
  String get lang => "Change Language";

  @override
  TextDirection get textDirection => TextDirection.ltr;
}

class GeneratedLocalizationsDelegate extends LocalizationsDelegate<WidgetsLocalizations> {
  const GeneratedLocalizationsDelegate();
  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale("ar", "YE"),
      Locale("en", "US")
    ];
  }

  LocaleResolutionCallback resolution({Locale fallback}) {
    return (Locale locale, Iterable<Locale> supported) {
      if (isSupported(locale)) {
        return locale;
      }
      final Locale fallbackLocale = fallback ?? supported.first;
      return fallbackLocale;
    };
  }

  @override
  Future<WidgetsLocalizations> load(Locale locale) {
    I18n._locale ??= locale;
    I18n._shouldReload = false;
    final String lang = I18n._locale != null ? I18n._locale.toString() : "";
    final String languageCode = I18n._locale != null ? I18n._locale.languageCode : "";
    if ("ar_YE" == lang) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_ar_YE());
    }
    else if ("en_US" == lang) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_en_US());
    }
    else if ("ar" == languageCode) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_ar_YE());
    }
    else if ("en" == languageCode) {
      return SynchronousFuture<WidgetsLocalizations>(const _I18n_en_US());
    }

    return SynchronousFuture<WidgetsLocalizations>(const I18n());
  }

  @override
  bool isSupported(Locale locale) {
    for (var i = 0; i < supportedLocales.length && locale != null; i++) {
      final l = supportedLocales[i];
      if (l.languageCode == locale.languageCode) {
        return true;
      }
    }
    return false;
  }

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => I18n._shouldReload;
}